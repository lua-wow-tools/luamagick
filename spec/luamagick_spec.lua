describe('luamagick', function()
  local t = require('luamagick')
  it('loads', function()
    assert.same('table', type(t))
  end)
  it('works', function()
    local wand = t:new_magick_wand()
    assert.True(wand:read_image('magick:logo'))
    assert.same('GIF', wand:get_image_format())
    assert.same(480, wand:get_image_height())
    assert.same(640, wand:get_image_width())
    assert.same(1, wand:get_number_images())
    assert.same('', wand:get_option('foo'))
    assert.same({}, { wand:get_options('') })
    assert.True(wand:set_option('foo', 'bar'))
    assert.same('bar', wand:get_option('foo'))
    assert.same({ 'foo' }, { wand:get_options('') })
  end)
  it('fonts', function()
    local wand = t:new_magick_wand()
    local draw = t:new_drawing_wand()
    draw:annotation(0, 0, 'rofl')
    wand:draw_image(draw)
    draw:clone():clear()
  end)
  it('handles MagickDistortImage', function()
    local wand = t:new_magick_wand()
    assert.True(wand:read_image('magick:logo'))
    assert.True(wand:distort_image(1, { 3, 4, 5, 6 }))
    assert.True(wand:distort_image(2, { 1, 2, 3, 4, 5, 6 }, true))
    assert.False(pcall(function()
      wand:distort_image(1, 3)
    end))
  end)
  it('handles MagickQueryFontMetrics', function()
    local mwand = t:new_magick_wand()
    assert.True(mwand:read_image('magick:logo'))
    local dwand = t:new_drawing_wand()
    dwand:set_font('FreeSans')
    dwand:set_font_size(42)
    local result = mwand:query_font_metrics(dwand, 'hello world')
    assert.same('table', type(result))
    assert.same(13, #result)
  end)
end)
